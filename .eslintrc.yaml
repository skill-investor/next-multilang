---
root: true # Disables inheritance from parent config.
env:
  browser: true
  node: true
  es6: true
extends:
  - eslint:recommended
  - plugin:import/recommended
  - plugin:import/typescript
  - plugin:react/recommended
  - plugin:react/jsx-runtime
  - plugin:react-hooks/recommended
  - plugin:unicorn/recommended
  - plugin:jsx-a11y/recommended
  - plugin:cypress/recommended
  - plugin:prettier/recommended
settings:
  react:
    version: detect
  import/resolver:
    node:
      extensions:
        - '.js'
        - '.jsx'
        - '.ts'
        - '.tsx'
    # Uses `eslint-import-resolver-typescript` to support the `exports` syntax in `package.json`
    # @see https://github.com/import-js/eslint-import-resolver-typescript
    typescript:
      alwaysTryTypes: true
rules:
  # Increase the level to 'error' for unused variables (the default is set to 'warning')
  # @see https://eslint.org/docs/latest/rules/no-unused-vars
  no-unused-vars:
    - error
    - args: all
  # The Unicorn plugin comes with opinionated checks, including some that we prefer disabling.
  'unicorn/no-array-for-each':
    # Performance is no longer an issue - we prefer `forEach` for readability.
    - off
  'unicorn/numeric-separators-style':
    # Doesn't add a lot of value and makes numbers look odd.
    - off
  'unicorn/prefer-type-error':
    # Not really applicable when using TypeScript (mostly triggers false positives).
    - off
overrides:
  # Disable abbreviation check on Cypress' `e2e` file.
  - files:
      - 'cypress/support/*'
    rules:
      'unicorn/prevent-abbreviations':
        - error
        - ignore:
            - '^e2e$'
  # The acronyms `props` is too common in React to avoid using it.
  - files:
      - 'src/**/*'
    rules:
      'unicorn/prevent-abbreviations':
        - error
        - ignore:
            - 'props'
            - 'Props'
  # TypeScript configurations
  - files:
      - '*.ts'
      - '*.mts'
      - '*.cts'
      - '*.tsx'
    parser: '@typescript-eslint/parser'
    parserOptions:
      project:
        - 'tsconfig.json'
        - 'cypress/tsconfig.json'
    extends:
      - plugin:@typescript-eslint/recommended
      - plugin:@typescript-eslint/recommended-requiring-type-checking
    rules:
      # Increase the level to 'error' for unused variables (the default is set to 'warning')
      # @see https://typescript-eslint.io/rules/no-unused-vars/
      no-unused-vars: off
      '@typescript-eslint/no-unused-vars':
        - error
      # Show errors when missing return types are missing on relevant functions
      # @see https://typescript-eslint.io/rules/explicit-function-return-type/
      '@typescript-eslint/explicit-function-return-type':
        - error
        - allowExpressions: true
          allowConciseArrowFunctionExpressionsStartingWithVoid: true
      # Checks members (classes, interfaces, types) and applies consistent ordering.
      # @see https://typescript-eslint.io/rules/member-ordering/
      '@typescript-eslint/member-ordering':
        - error
        - default:
            # Only use basic types to avoid intrusive rules.
            memberTypes:
              - field
              - constructor
              - method
