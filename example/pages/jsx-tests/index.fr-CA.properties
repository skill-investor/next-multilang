# Page localized URL segment (slug) in (translatable) human readable format. 
# This key will be transformed when used in URLs. For example "About Us" will become "about-us".
# All characters will be lowercased and all spaces will be replaced by dashes.
exampleApp.jsxTest.slug = Tests de JSX
# Base test: one JSX element
exampleApp.jsxTest.baseTest1 = Il s'agit d'un <link>lien simple</link>.
# Base test: two child elements inside another element
exampleApp.jsxTest.baseTest2 = Ceci est un <link>lien avec <strong>gras</strong> et <i>italique</i></link>
# Plural + JSX test
exampleApp.jsxTest.plural = {count, plural, =0 {Il ne reste plus de <strong>bonbons</strong>.} one {Il reste # <i>bonbons</i>.} other {Il reste <u>#</u> bonbons.}}
# Escape test: `formatJsx` using '<', '>', '{', '}' and quotes
exampleApp.jsxTest.escapeTest = Ce message <strong>devrait</strong> s'afficher avec 3 guillemets ('''), les caractères supérieurs à (&#x3c; &#x3C;) et inférieurs à (&#x3e; &#x3E;) ainsi que des accolades (&#x7b; &#x7B; &#x7d; &#x7D;).
# Test that JSX elements can support style and events
exampleApp.jsxTest.styleAndEvents = Ce message doit avoir un <strong>style</strong> et des <link>événements</link> sur ses éléments JSX.
# This will use in the console log when the mouse goes over the link of the previous test
exampleApp.jsxTest.styleAndEventsConsole = Événement de console de survol de la souris.

# Missing closing XML tag
exampleApp.jsxTest.missingClose1 = Ce message <strong>ne devrait pas s'afficher car il manque une balise XML de fermeture
# Missing closing XML tag at the end
exampleApp.jsxTest.missingClose2 = Ce message ne doit pas s'afficher car il manque une balise XML de fermeture<strong>
# Missing closing XML tag at the beginning
exampleApp.jsxTest.missingClose3 = <strong>Ce message ne doit pas s'afficher car il manque une balise XML de fermeture
# Missing closing embedded XML tag
exampleApp.jsxTest.missingClose4 = Ce message <strong>ne devrait pas s'afficher <i>car il manque</strong> une balise XML de fermeture
# Missing closing embedded XML tag at the end tag 
exampleApp.jsxTest.missingClose5 = Ce message <strong>ne devrait pas s'afficher car il manque<i></strong> une balise XML de fermeture
# Missing closing embedded XML tag at the end tag
exampleApp.jsxTest.missingClose6 = Ce message <strong><i>ne devrait pas s'afficher car il manque</strong> une balise XML de fermeture
# Missing closing embedded XML tag at the end tag (multi)
exampleApp.jsxTest.missingClose7 = Ce message <strong><i>ne devrait pas s'afficher car il manque<i1></i1><i2></strong> une balise XML de fermeture

# Missing opening XML tag
exampleApp.jsxTest.missingOpen1 = Ce message </strong> ne devrait pas s'afficher car il manque une balise XML d'ouverture
# Missing opening XML tag at the end
exampleApp.jsxTest.missingOpen2 = Ce message ne devrait pas s'afficher car il manque une balise XML d'ouverture</strong>
# Missing opening XML tag at the beginning
exampleApp.jsxTest.missingOpen3 = </strong>Ce message ne devrait pas s'afficher car il manque une balise XML d'ouverture
# Missing opening embedded XML tag
exampleApp.jsxTest.missingOpen4 = Ce message <strong>ne devrait pas s'afficher </i>car il lui manque</strong> une balise XML d'ouverture
# Missing opening embedded XML tag at the end tag 
exampleApp.jsxTest.missingOpen5 = Ce message <strong>ne devrait pas s'afficher car il manque</i></strong> une balise XML d'ouverture
# Missing opening embedded XML tag at the end tag
exampleApp.jsxTest.missingOpen6 = Ce message <strong><i>ne devrait pas s'afficher car il manque</strong> une balise XML d'ouverture
# Missing opening embedded XML tag at the end tag (multi)
exampleApp.jsxTest.missingOpen7 = Ce message <strong><i>ne devrait pas s'afficher car il manque<i1></i1></i2></strong> une balise XML d'ouverture

# Invalid XML tags
exampleApp.jsxTest.invalidXml1 = Ce <strong-tag>message</strong-tag> ne devrait pas s'afficher car il contient une balise avec un nom invalide
exampleApp.jsxTest.invalidXml2 = Ce <span class="bad">message</span> ne doit pas s'afficher car la balise XML contient un attribut

# Duplicate tag
exampleApp.jsxTest.duplicateTags = Ce <strong>message</strong> ne doit pas s'afficher car il existe deux balises <strong>XML</strong> portant le même nom

# Invalid message value
exampleApp.jsxTest.badMessageValue1 = Ce <strong>message</strong> ne devrait pas s'afficher car une valeur avec le mauvais type a été fournie à la place d'un élément JSX
exampleApp.jsxTest.badMessageValue2 = Ce {message} ne doit pas s'afficher car JSX a été fourni à la place d'une valeur de variable

# Bad JSX element
exampleApp.jsxTest.badJsxElement1 = Ce <strong>message</strong> ne doit pas s'afficher car l'élément JSX fourni a plusieurs enfants au même niveau
exampleApp.jsxTest.badJsxElement2 = Ce <strong>message</strong> ne doit pas s'afficher car l'élément JSX contenait un message
