---
root: true # Disables inheritance from parent config.
extends:
  - eslint:recommended
  - next/core-web-vitals
  - plugin:unicorn/recommended
  - plugin:prettier/recommended
rules:
  # Increase the level to 'error' for unused variables (the default is set to 'warning')
  # @see https://eslint.org/docs/latest/rules/no-unused-vars
  no-unused-vars:
    - error
    - args: all
  # The Unicorn plugin comes with opinionated checks, including some that we prefer disabling.
  'unicorn/no-array-for-each':
    # Performance is no longer an issue - we prefer `forEach` for readability.
    - off
  'unicorn/numeric-separators-style':
    # Doesn't add a lot of value and makes numbers look odd.
    - off
  'unicorn/prefer-type-error':
    # Not really applicable when using TypeScript (mostly triggers false positives).
    - off
overrides:
  # TypeScript configurations
  - files:
      - '*.ts'
      - '*.mts'
      - '*.cts'
      - '*.tsx'
    parser: '@typescript-eslint/parser'
    parserOptions:
      project:
        - 'tsconfig.json'
    extends:
      - plugin:@typescript-eslint/recommended
      - plugin:@typescript-eslint/recommended-requiring-type-checking
    rules:
      # Increase the level to 'error' for unused variables (the default is set to 'warning')
      # @see https://typescript-eslint.io/rules/no-unused-vars/
      no-unused-vars: off
      '@typescript-eslint/no-unused-vars':
        - error
      # Show errors when missing return types are missing on relevant functions
      # @see https://typescript-eslint.io/rules/explicit-function-return-type/
      '@typescript-eslint/explicit-function-return-type':
        - error
        - allowExpressions: true
          allowConciseArrowFunctionExpressionsStartingWithVoid: true
      # React-only config: allow passing a callback function in React (e.g. click events) while checking for promises
      # @see https://typescript-eslint.io/rules/no-misused-promises/
      '@typescript-eslint/no-misused-promises':
        - error
        - checksVoidReturn:
            arguments: false
            attributes: false
  # Unicorn overrides.
  - files:
      # Components must be `PascalCase`
      - 'components/**/*'
    rules:
      'unicorn/filename-case':
        - error
        - case: pascalCase
  - files:
      # Messages must be `camelCase`
      - 'messages/**/*'
    rules:
      'unicorn/filename-case':
        - error
        - case: camelCase
  - files:
      - '**/*'
    rules:
      'unicorn/prevent-abbreviations':
        - error
        - ignore:
            # The acronyms `ref` is too common in React (e.g., `useRef`) to avoid using it.
            - 'ref'
            - 'Ref'
            # The acronyms `props` is too common in React to avoid using it.
            - 'props'
            - 'Props'
